#BlueJ class context
comment0.params=conn
comment0.target=int\ exist(Connection)
comment0.text=\nChecks\ to\ see\ if\ the\ Reservations\ table\ exists\n\n@param\ \ \ conn\ \ \ \ Connection\ to\ database\n@return\ \ \ \ \ \ positive\ if\ it\ exists,\ negative\ if\ it\ doesn't\ exist\n\n
comment1.params=conn
comment1.target=void\ create(Connection)
comment1.text=\nCreates\ the\ table,\ with\ the\ order\ of\ attributes\ being\:\ Code,\ Room,\ CheckIn,\ CheckOut,\ Rate,\ LastName,\ FirstName,\ Adults,\ Kids.\n\n@param\ \ \ conn\ \ \ \ Connection\ to\ database\n\n
comment10.params=result
comment10.target=Reservation\ buildReservation(ResultSet)
comment10.text=\nBuilds\ a\ reservation\ based\ on\ a\ ResultSet,\ and\ returns\ that\ Reservation\ object\ filled\ in.\n\n
comment11.params=conn\ start\ end
comment11.target=ArrayList<Reservation>\ intervalRes(Connection,\ java.sql.Date,\ java.sql.Date)
comment11.text=\nReturns\ an\ ArrayList\ of\ reservations\ that\ COMMENCE\ within\ the\ range.\ SPECIFICALLY\ COMMENCE.\n\n
comment12.params=conn\ start\ end\ roomID
comment12.target=int\ checkAvail(Connection,\ java.sql.Date,\ java.sql.Date,\ String)
comment12.text=\nChecks\ the\ availability\ of\ a\ specific\ room\ between\ two\ dates,\ Start\ and\ End\n\n@param\ \ \ conn\ \ \ \ Connection\n@param\ \ \ start\ \ \ Start\ date\n@param\ \ \ end\ \ \ \ \ End\ date\n@param\ \ \ roomID\ \ specific\ room\ we're\ checking\ the\ availability\ for\n@return\ \ \ \ \ \ avail\ -1\ is\ occupied,\ 0\ is\ partially\ occupied,\ 1\ is\ free\n\n
comment13.params=conn\ roomID
comment13.target=ArrayList<Reservation>\ roomRes(Connection,\ String)
comment13.text=\nReturns\ an\ ArrayList\ of\ Reservations\ for\ the\ specified\ room.\n\n
comment14.params=conn\ date\ roomID
comment14.target=double\ getRate(Connection,\ java.sql.Date,\ String)
comment14.text=\nPrivate\ method\ for\ use\ in\ getRates().\ Only\ useful\ for\ getting\ a\ single\ day's\ rate.\n\n@param\ \ \ conn\ \ \ \ Connection\n@param\ \ \ date\ \ \ \ The\ date\ that\ we're\ checking\n@param\ \ \ roomID\ \ The\ roomID\ of\ the\ room\ we're\ checking\n@return\ \ \ \ \ The\ rate,\ modified\ for\ the\ specific\ date,\ of\ this\ room\n\n
comment15.params=conn\ start\ end\ roomID
comment15.target=double[]\ getRates(Connection,\ java.sql.Date,\ java.sql.Date,\ String)
comment15.text=\nPulic\ method\ for\ getting\ the\ rates\ of\ the\ desired\ room\ from\ the\ Start\ date\ to\ the\ End\ date.\nOrdered\ by\ date.\ If\ an\ item\ in\ the\ array\ is\ 0,\ it\ means\ the\ room\ is\ occupied\ that\ day.\nIt's\ the\ responsibility\ of\ the\ caller\ to\ know\ what\ days\ match\ up\ with\ what\ elements.\n\n@param\ \ \ conn\ \ \ \ The\ connection\ between\ thsi\ program\ and\ the\ DB\n@param\ \ \ start\ \ \ The\ first\ date\ in\ the\ range.\n@param\ \ \ end\ \ \ \ \ The\ last\ date\ in\ the\ range.\n@param\ \ \ roomID\ \ The\ primary\ key\ of\ the\ room\ the\ user\ is\ looking\ at.\n@return\ \ \ \ \ \ An\ integer\ array,\ with\ the\ ith\ element\ corresponding\ to\ the\ ith\ day\ in\ the\ range.\nIf\ array[i]\ \=\ 0,\ the\ room\ is\ occupied\ on\ that\ day.\ Otherwise,\ array[i]\ will\ represent\nthe\ rate\ for\ the\ room\ on\ that\ date.\ Weekends\ and\ holidays\ are\ already\ accounted\ for.\n\n
comment2.params=conn
comment2.target=void\ clear(Connection)
comment2.text=\nDeletes\ every\ tuple\ from\ the\ Reservations\ table\n\n@param\ \ \ conn\ \ \ \ Connection\ to\ DB\n\n
comment3.params=conn
comment3.target=void\ drop(Connection)
comment3.text=\nCompletely\ drops\ the\ Reservations\ table\n\n@param\ \ \ conn\ \ \ \ Connection\ to\ DB\n\n
comment4.params=conn
comment4.target=ArrayList<Reservation>\ getAll(Connection)
comment4.text=\nGets\ all\ the\ info\ from\ all\ the\ reservations\n\n@param\ \ \ conn\ \ \ \ Connection\ to\ DB\n@return\ \ \ \ \ \ ArrayList\ of\ Reservations\ filled\ with\ all\ of\ the\ data\ for\ that\ Reservation\n\n
comment5.params=conn\ code
comment5.target=Reservation\ getDetail(Connection,\ int)
comment5.text=\nGets\ all\ the\ detail\ on\ a\ specific\ reservation,\ by\ code\n\n@param\ \ \ conn\ \ \ \ Connection\ to\ DB\n@param\ \ \ code\ \ \ \ Unique\ code\ for\ that\ reservation\n@return\ \ \ \ \ \ Returns\ the\ reservation\ information\ in\ a\ Reservation\ object\n\n
comment6.params=conn
comment6.target=Object[][]\ getRevenue(Connection)
comment6.text=\nGets\ the\ total\ revenue\ of\ the\ Inn,\ split\ by\ month\ and\ by\ room\n\n@param\ \ \ conn\ \ \ \ Connection\ to\ DB\n@return\ \ \ \ \ \ 11x13\ array\ of\ doubles,\ containing\ the\ revenues\ for\ specific\ month/rom\ combos,\ as\ well\ as\ the\ totals.\n\n
comment7.params=conn
comment7.target=Object[][]\ getNumRes(Connection)
comment7.text=\nSimilar\ to\ getRevenue,\ except\ it\ returns\ the\ number\ of\ Reservations\ by\ room,\ month.\n\n
comment8.params=conn\ date
comment8.target=int[]\ dateRes(Connection,\ java.sql.Date)
comment8.text=\nChecks\ which\ rooms\ are\ available\ on\ a\ given\ date.\n\n@param\ \ \ conn\ \ \ \ Connection\ to\ DB\n@param\ \ \ date\ \ \ \ The\ specific\ date\ that\ we're\ checking\ for\n@return\ \ \ \ \ \ Returns\ an\ int[]\ array\ of\ 10\ elements,\ with\ the\ ith\ element\ referring\ to\ the\ ith\ room\ (ordered\ alpha).\nIf\ array[i]\ \=\=\ 0,\ it's\ free.\ If\ array[i]\ \=\=\ 1,\ it's\ occupied.\n\n
comment9.params=conn\ Start\ End\ roomID
comment9.target=ArrayList<Reservation>\ dateRoomRes(Connection,\ java.sql.Date,\ java.sql.Date,\ String)
comment9.text=\nReturns\ a\ list\ of\ reservations\ for\ a\ specific\ room\ that\ occupy\ any\ night\ within\ the\ given\ date\ ranges\n\n@param\ \ \ conn\ \ \ \ Connection\ to\ DB\n@param\ \ \ Start\ \ \ start\ date\ of\ range\n@param\ \ \ End\ \ \ \ \ end\ date\ of\ range\n@param\ \ \ roomID\ \ specific\ room\ we're\ checking\n@return\ \ \ \ \ \ ArrayList\ of\ reservations\n\n
numComments=16
